package ${packageName}.${moduleName}.controller;

import ${packageName}.common.core.controller.BaseController;
import ${packageName}.common.enums.BusinessType;
import ${packageName}.common.result.AjaxResult;
import ${packageName}.framework.annotation.OperationLog;
import ${packageName}.${moduleName}.model.entity.${className};
import ${packageName}.${moduleName}.model.request.${classNameLower}.${className}AddRequest;
import ${packageName}.${moduleName}.model.request.${classNameLower}.${className}ListRequest;
import ${packageName}.${moduleName}.model.request.${classNameLower}.${className}UpdateRequest;
import ${packageName}.${moduleName}.service.${className}Service;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.tags.Tag;
import lombok.RequiredArgsConstructor;
import org.springdoc.core.annotations.ParameterObject;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import java.util.List;

/**
 * ${tableComment}控制器
 *
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${moduleName}/${classNameLower}")
@Tag(name = "${tableComment}")
@RequiredArgsConstructor
public class ${className}Controller extends BaseController {

    private final ${className}Service ${classNameLower}Service;

    /**
     * ${tableComment}列表（树形）
     *
     * @param request ${tableComment}列表查询参数
     * @return 返回${tableComment}列表
     */
    @GetMapping("/list")
    @Operation(summary = "${tableComment}列表（树形）")
    @PreAuthorize("@ss.hasPermission('${moduleName}:${classNameLower}:list')")
    public AjaxResult<List<${className}>> list${className}(@Parameter(description = "${tableComment}列表查询参数")
                                                           @Validated @ParameterObject ${className}ListRequest request) {
        List<${className}> list = ${classNameLower}Service.select${className}Tree(request);
        return AjaxResult.success(list);
    }

    /**
     * 添加${tableComment}
     *
     * @param request 添加${tableComment}请求参数
     * @return 操作结果
     */
    @PostMapping
    @PreAuthorize("@ss.hasPermission('${moduleName}:${classNameLower}:add')")
    @Operation(summary = "添加${tableComment}")
    @OperationLog(title = "${tableComment}", businessType = BusinessType.INSERT)
    public AjaxResult<Void> add${className}(@Parameter(description = "添加${tableComment}请求参数")
                                            @Validated @RequestBody ${className}AddRequest request) {
        boolean result = ${classNameLower}Service.add${className}(request);
        return toAjax(result);
    }

    /**
     * 删除${tableComment}
     *
     * @param id ${tableComment}ID
     * @return 操作结果
     */
    @DeleteMapping("/{id}")
    @PreAuthorize("@ss.hasPermission('${moduleName}:${classNameLower}:remove')")
    @OperationLog(title = "${tableComment}", businessType = BusinessType.DELETE)
    @Operation(summary = "删除${tableComment}")
    public AjaxResult<Void> delete${className}(@Parameter(description = "${tableComment}ID")
                                               @PathVariable("id") Long id) {
        checkParam(id == null, "id不能为空");
        boolean result = ${classNameLower}Service.delete${className}ById(id);
        return toAjax(result);
    }

    /**
     * 修改${tableComment}
     *
     * @param request 修改${tableComment}请求参数
     * @return 操作结果
     */
    @PutMapping
    @PreAuthorize("@ss.hasPermission('${moduleName}:${classNameLower}:update')")
    @OperationLog(title = "${tableComment}", businessType = BusinessType.UPDATE)
    @Operation(summary = "修改${tableComment}")
    public AjaxResult<Void> update${className}(@Parameter(description = "修改${tableComment}请求参数")
                                               @Validated @RequestBody ${className}UpdateRequest request) {
        return toAjax(${classNameLower}Service.update${className}(request));
    }

    /**
     * 查询${tableComment}
     *
     * @param id ${tableComment}ID
     * @return 操作结果
     */
    @GetMapping("/{id}")
    @PreAuthorize("@ss.hasPermission('${moduleName}:${classNameLower}:query')")
    @Operation(summary = "查询${tableComment}")
    public AjaxResult<${className}> get${className}ById(@Parameter(description = "${tableComment}ID")
                                                        @PathVariable("id") Long id) {
        checkParam(id == null, "id不能为空");
        ${className} ${classNameLower} =${classNameLower}Service.get${className}ById(id);
        return AjaxResult.success(${classNameLower});
    }
} 