// 假设子DTO存放在 'dto' 子包下 (Assuming sub-DTOs go into a 'dto' subpackage)
package ${packageName}.model.dto;

import io.swagger.v3.oas.annotations.media.Schema;
import lombok.Data;
// 处理子项字段可能需要的导入，例如 Date, BigDecimal (To handle imports like Date, BigDecimal if needed for sub-item fields)
#foreach ($import in $subDtoImports)
import ${import};
#end
// 确保这些是Jakarta约束 (Ensure these are jakarta constraints)
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;

/**
 * ${subClassName} DTO (例如: OrderItem DTO)
 * (为 ${subTableComment} 设计的数据传输对象)
 *
 * @author ${author} (代码生成器)
 * @date ${datetime}
 */
@Data
@Schema(description = "${subTableComment} DTO")
// 类名示例: OrderItemDto (Name like OrderItemDto)
public class ${subClassName}Dto {
    #foreach ($column in $subColumns)
        // 包含与添加/更新相关的字段 (Include fields relevant for add/update)
        #if($column.isInsert == '1' || $column.isEdit == '1')

        /**
         * $column.columnComment (子表字段)
         */
        @Schema(description = "$column.columnComment")
            #if($column.isRequired == '1' && $column.javaType == 'String')
        @NotBlank(message = "$column.columnComment 不能为空 (不能为空格)")
            #elseif($column.isRequired == '1')
        @NotNull(message = "$column.columnComment 不能为空")
            #end
        private $column.javaType $column.javaField;
        #end
    #end
}
