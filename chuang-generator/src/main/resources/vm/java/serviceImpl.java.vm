package ${packageName}.service.impl;

import cn.zhangchuangla.common.core.utils.SecurityUtils;
import ${packageName}.mapper.${ClassName}Mapper;
import ${packageName}.model.entity.${ClassName};
import ${packageName}.model.request.${businessName}.${ClassName}AddRequest;
import ${packageName}.model.request.${businessName}.${ClassName}QueryRequest;
import ${packageName}.model.request.${businessName}.${ClassName}UpdateRequest;
import ${packageName}.service.${ClassName}Service;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import lombok.RequiredArgsConstructor;
import org.springframework.beans.BeanUtils;
import org.springframework.stereotype.Service;

import java.util.Date;
import java.util.List;

/**
 * ${functionName}Service实现
 *
 * @author ${author}
 * @date ${datetime}
 */
@Service
@RequiredArgsConstructor
public class ${ClassName}ServiceImpl extends ServiceImpl<${ClassName}Mapper, ${ClassName}> implements ${ClassName}Service {

    private final ${ClassName}Mapper ${className}Mapper;

    /**
     * 分页查询${functionName}
     *
     * @param request 查询参数
     * @return 分页结果
     */
    @Override
    public Page<${ClassName}> list${ClassName}(${ClassName}QueryRequest request) {
        Page<${ClassName}> page = new Page<>(request.getPageNum(), request.getPageSize());
        return ${className}Mapper.list${ClassName}(page, request);
    }

    /**
     * 根据ID查询${functionName}
     *
     * @param ${pkColumn.javaField} ID
     * @return ${functionName}
     */
    @Override
    public ${ClassName} get${ClassName}ById(${pkColumn.javaType} ${pkColumn.javaField}) {
        return getById(${pkColumn.javaField});
    }

    /**
     * 新增${functionName}
     *
     * @param request 新增请求参数
     * @return 结果
     */
    @Override
    public boolean add${ClassName}(${ClassName}AddRequest request) {
        ${ClassName} ${className} =new ${ClassName}();
        BeanUtils.copyProperties(request, ${className});
        return save(${className});
    }

    /**
     * 修改${functionName}
     *
     * @param request 修改请求参数
     * @return 结果
     */
    @Override
    public boolean update${ClassName}(${ClassName}UpdateRequest request) {
        ${ClassName} ${className} =new ${ClassName}();
        BeanUtils.copyProperties(request, ${className});
        return updateById(${className});
    }

    /**
     * 批量删除${functionName}
     *
     * @param ids 需要删除的ID集合
     * @return 结果
     */
    @Override
    public boolean delete${ClassName}ByIds(List<${pkColumn.javaType}> ids) {
        return removeByIds(ids);
    }
}
