package ${packageName}.model.request.${businessName};

import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.Data;

import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
#if($tplCategory == 'sub')
import jakarta.validation.Valid;
import java.util.List;
// 引入新子项DTO的路径 (Path to the new sub-item DTO)
import ${packageName}.model.dto.${subClassName}Dto;
#end
import java.util.Date;

/**
 * ${functionName}添加请求参数
#if($tplCategory == 'sub')
 * (包含 ${subTableComment} 子项的添加请求)
#end
 *
 * @author ${author}
 * @date ${datetime}
 */
@Data
@Schema(description = "${functionName}添加请求参数")
public class ${ClassName}AddRequest {
    #foreach ($column in $columns)
        #if($column.isPk != '1' && $column.isInsert == '1')

            /**
             * $column.columnComment
             */
            @Schema(description = "$column.columnComment")
                #if($column.isRequired == '1' && $column.javaType == 'String')
                @NotBlank(message = "$column.columnComment不能为空")
                #elseif($column.isRequired == '1')
                @NotNull(message = "$column.columnComment不能为空")
                #end
                #if($column.dictType && $column.dictType != '' && ($column.javaType == 'Long' || $column.javaType ==
                    'Integer'))
                @JsonSerialize(using = ToStringSerializer.class)
                #end
            private $column.javaType $column.javaField;
        #end
    #end

    #if($tplCategory == 'sub')
    /**
     * ${subTableComment}列表 (子表数据列表)
     */
    @Schema(description = "${subTableComment}列表")
    // @Valid 注解对于触发子项验证至关重要 (Crucial for triggering validation on sub-items)
    @Valid
    // 例如: orderItemList, 与服务中的getter方法匹配 (e.g., orderItemList, matching getter in service)
    private List<${subClassName}Dto> ${subClassNameLowerList};
    #end
}
