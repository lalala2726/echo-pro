package ${packageName}.service;

import ${packageName}.model.entity.${ClassName};
import ${packageName}.model.request.${businessName}.${ClassName}AddRequest;
import ${packageName}.model.request.${businessName}.${ClassName}QueryRequest;
import ${packageName}.model.request.${businessName}.${ClassName}UpdateRequest;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.baomidou.mybatisplus.extension.service.IService;

import java.util.List;

/**
 * ${functionName}Service接口
 *
 * @author ${author}
 * @date ${datetime}
 */
public interface ${ClassName}Service extends IService<${ClassName}> {

    /**
     * 分页查询${functionName}
     *
     * @param request 查询参数
     * @return 分页结果
     */
    Page<${ClassName}> list${ClassName}(${ClassName}QueryRequest request);

    /**
     * 导出${functionName}列表
     *
     * @param request 查询参数
     * @return ${functionName}列表
     */
    List<${ClassName}> export${ClassName}(${ClassName}QueryRequest request);

    /**
     * 根据ID查询${functionName}
     *
     * @param ${pkColumn.javaField} ID
     * @return ${functionName}
     */
        ${ClassName} get${ClassName}ById(${pkColumn.javaType} ${pkColumn.javaField});

    /**
     * 新增${functionName}
     *
     * @param request 新增请求参数
     * @return 结果
     */
    boolean add${ClassName}(${ClassName}AddRequest request);

    /**
     * 修改${functionName}
     *
     * @param request 修改请求参数
     * @return 结果
     */
    boolean update${ClassName}(${ClassName}UpdateRequest request);

    /**
     * 批量删除${functionName}
     *
     * @param ${pkColumn.javaField}s 需要删除的ID集合
     * @return 结果
     */
    boolean delete${ClassName}ByIds(List<${pkColumn.javaType}> ${pkColumn.javaField}s);

    /**
     * 修改${functionName}状态
     *
     * @param ${pkColumn.javaField} ${functionName}ID
     * @param status 状态
     * @return 结果
     */
    boolean updateStatus(${pkColumn.javaType} ${pkColumn.javaField}, String status);

    /**
     * 获取${functionName}选项列表
     *
     * @return ${functionName}列表
     */
    List<${ClassName}> list${ClassName}ForOption();
}
